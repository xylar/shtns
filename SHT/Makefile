# this Makefile generates C code for similar SHT functions,
# from one generic code + tags (reduced code maintenance).

#first char : V,Q,S,T
# Spheroidal and Toroidal (V,S,T)
vect=-e "/^[3Q\#]/d" -e "s/^[VST]X*//"
# Spheroidal component only (V,S)
sph=-e "/^[3QT\#]/d" -e "s/^[VS]X*//"
# Toroidal component only (V,T)
tor=-e "/^[3QS\#]/d" -e "s/^[VT]X*//"
# Scalar component (Q)
scal=-e "/^[3VST\#]/d" -e "s/^QX*//"
# 3D Vector component (VQST3) but not exclusive (.X) lines.
v3d=-e "/^[\#]/d" -e "/^.X/d" -e "s/^[QVST3]//"

# second char : 1BEO
# even (1,E)
ev=-e "s/^\(.\)[1E]/\1/" -e "/^.[BO]/d"
# odd (1,O)
od=-e "s/^\(.\)[1O]/\1/" -e "/^.[BE]/d"
# both (B,E,O)
eo=-e "s/^\(.\)[EOB]/\1/" -e "/^.1/d"

# second char : 3 components or solo.


#SH_to_spat
GSH=hyb_SH_to_spat.gen.c
ST=SHst_to_spat.c
Q=SH_to_spat.c
S=SHs_to_spat.c
T=SHt_to_spat.c
QST=SHqst_to_spat.c
GSHEO=sparse_SH_to_spat.gen.c
STEO=SHeost_to_spat.c
QEO=SHeo_to_spat.c
SEO=SHeos_to_spat.c
TEO=SHeot_to_spat.c

#spat_to_SH
GSP=hyb_spat_to_SH.gen.c
SC=spat_to_SH.c
VE=spat_to_SHst.c
V3=spat_to_SHqst.c

#sparse
GSPEO=sparse_spat_to_SH.gen.c
SCEO=spat_to_SHeo.c
VEEO=spat_to_SHeost.c

#fly
FSH=fly_SH_to_spat.gen.c
FST=SHst_to_spat_fly.c
FQ=SH_to_spat_fly.c
FS=SHs_to_spat_fly.c
FT=SHt_to_spat_fly.c
FQST=SHqst_to_spat_fly.c


all: $(GSH) $(GSP) $(GSHEO) $(GSPEO) $(FSH)
	$(MAKE) $(SC)
	$(MAKE) $(Q)
	$(MAKE) $(SCEO)
	$(MAKE) $(QEO)
	$(MAKE) $(FQ)

# SH_to_spat_fly generation
$(FQ) : $(FSH) Makefile
	@echo "// This file was automatically generated by 'make' from file '$(FSH)'." > $(FST)
	@echo "// To modify it, please consider modifying $(FSH)" >> $(FST)
	@cp $(FST) $(FS)
	@cp $(FST) $(FT)
	@cp $(FST) $(FQ)
	@cp $(FST) $(FQST)
#EVEN/ODD
	@sed $(eo) $(vect) $(FSH) >> $(FST)
	@sed $(eo) $(sph)  $(FSH) >> $(FS)
	@sed $(eo) $(tor)  $(FSH) >> $(FT)
	@sed $(eo) $(scal) $(FSH) >> $(FQ)
	@sed $(eo) $(v3d)  $(FSH) >> $(FQST)
	@echo "SH*_to_spat_fly code generated."

# SH_to_spat generation
$(Q) : $(GSH) Makefile
	@echo "// This file was automatically generated by 'make' from file '$(GSH)'." > $(ST)
	@echo "// To modify it, please consider modifying $(GSH)" >> $(ST)
	@cp $(ST) $(S)
	@cp $(ST) $(T)
	@cp $(ST) $(Q)
	@cp $(ST) $(QST)
#EVEN/ODD
	@sed $(eo) $(vect) $(GSH) >> $(ST)
	@sed $(eo) $(sph)  $(GSH) >> $(S)
	@sed $(eo) $(tor)  $(GSH) >> $(T)
	@sed $(eo) $(scal) $(GSH) >> $(Q)
	@sed $(eo) $(v3d)  $(GSH) >> $(QST)
	@echo "SH*_to_spat code generated."

# spat_to_SH generation
$(SC) : $(GSP) Makefile
	@echo "// This file was automatically generated by 'make' from file '$(GSP)'." > $(SC)
	@echo "// To modify it, please consider modifying $(GSP)" >> $(SC)
	@cp $(SC) $(VE)
	@cp $(SC) $(V3)
#EVEN/ODD
	@sed $(eo) $(scal) $(GSP) >> $(SC)
	@sed $(eo) $(vect) $(GSP) >> $(VE)
	@sed $(eo) $(v3d)  $(GSP) >> $(V3)
	@echo "spat_to_SH* code generated."

# sparse_SH_to_spat generation
$(QEO) : $(GSHEO) Makefile
	@echo "// This file was automatically generated by 'make' from file '$(GSHEO)'." > $(STEO)
	@echo "// To modify it, please consider modifying $(GSHEO)" >> $(STEO)
	@cp $(STEO) $(SEO)
	@cp $(STEO) $(TEO)
	@cp $(STEO) $(QEO)
#EVEN/ODD
	@sed $(eo) $(vect)  $(GSHEO) >> $(STEO)
	@sed $(eo) $(sph)  $(GSHEO) >> $(SEO)
	@sed $(eo) $(tor)  $(GSHEO) >> $(TEO)
	@sed $(eo) $(scal)  $(GSHEO) >> $(QEO)
	@echo "sparse_SH*_to_spat code generated."

# sparse_spat_to_SH generation
$(SCEO) : $(GSPEO) Makefile
	@echo "// This file was automatically generated by 'make' from file '$(GSPEO)'." > $(SCEO)
	@echo "// To modify it, please consider modifying $(GSPEO)" >> $(SCEO)
	@cp $(SCEO) $(VEEO)
#EVEN/ODD
	@sed $(eo) $(scal)  $(GSPEO) >> $(SCEO)
	@sed $(eo) $(vect)  $(GSPEO) >> $(VEEO)
	@echo "sparse_spat_to_SH* code generated."

clean:
	rm -f $(ST) $(Q) $(S) $(T) $(QST) $(V3)
	rm -f $(STEO) $(QEO) $(SEO) $(TEO) $(SC) $(VE) $(SCEO) $(VEEO)
	rm -f $(FST) $(FQ) $(FS) $(FT) $(FQST)
